# -*- coding: utf-8 -*-
"""Correlation Based Recommender.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T2Hmjgn5R2yYmt9QkeSzn9kg3qIQ94K1
"""

# importing libraries
import pandas as pd
import numpy as np

# reading files
data = pd.read_csv('listing.csv', encoding = 'latin-1')
books = pd.read_csv('books.csv', encoding = 'latin-1')

# Checking the data using head function 
books.head()

# calculating the mean
rating = pd.DataFrame(books.groupby('book_id')['no_of_ratings'].mean())
rating.head()

# getting the description of rating
rating.describe()

# sorting based on no of ratings that each book got
rating.sort_values('no_of_ratings', ascending=False).head()

# Preparing data table for analysis
user_rating= pd.pivot_table(data=books, values='user_rating', index='user_id', columns='book_id')
user_rating.head()

correlation_matrix  = user_rating.corr(method='pearson')
correlation_matrix.head(10)

# getting the users who rated this particular book and making sure rating is not zero
OneManOut_rating = user_rating[4755]
OneManOut_rating[OneManOut_rating>=0]

# finidng similarity using Pearson correlation
similar_to_OneManOut = user_rating.corrwith(OneManOut_rating)

corr_OneManOut = pd.DataFrame(similar_to_OneManOut, columns=['PearsonR'])
corr_OneManOut.dropna(inplace=True)
corr_OneManOut.head()

OneManOut_corr_summary = corr_OneManOut.join(rating)
# getting the most similar book
OneManOut_corr_summary.sort_values('PearsonR', ascending=False).head(10)

# getting the details for most similar books
book_corr_OneManOut = pd.DataFrame([2629, 493, 4755, 4571, 2900, 1417, 2681, 1676, 2913, 1431], index = np.arange(10), columns=['book_id'])
detail = pd.merge(book_corr_OneManOut, data,on='book_id')
detail

